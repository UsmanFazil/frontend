{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js!/Users/usmanfazil/Git_clones/notary-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/usmanfazil/Git_clones/notary-front/src/store/modules/user.js","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/store/modules/user.js","mtime":1555257253688},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var state = {\n  Userdata: {\n    UserName: 'sidra',\n    Userid: 'pidra',\n    UserEmail: 'okay',\n    UserProfilepicture: 'akjdakjdkh',\n    UserInitials: 'adadad',\n    UserSignature: 'dadada',\n    UserCompany: 'dadad',\n    UserPhone: 'dadada',\n    UserToken: 'dadada',\n    // these should be in the contract module\n    Waitingforother: '1',\n    Tosign: '1',\n    Expiringsoon: '1'\n  }\n}; // getters for all user data \n\nvar getters = {\n  getusername: function getusername(state) {\n    return state.Userdata.UserName;\n  },\n  getuserid: function getuserid(state) {\n    return state.Userdata.Userid;\n  },\n  getemail: function getemail(state) {\n    // console.log(\"chal bhi rhaa hn mein\"+state.Userdata.UserEmail)\n    return state.Userdata.UserEmail;\n  },\n  getprofilepicture: function getprofilepicture(state) {\n    // console.log(\"chal rhaa hn mein\"+state.Userdata.UserProfilepicture)\n    //   return this.$store.getters.getprofilepicture || 0\n    return \"http://localhost:8000/\" + state.Userdata.UserProfilepicture;\n  },\n  getinitials: function getinitials(state) {\n    return state.Userdata.UserInitials;\n  },\n  getsignature: function getsignature(state) {\n    return state.Userdata.UserSignature;\n  },\n  getcompany: function getcompany(state) {\n    return state.Userdata.UserCompany;\n  },\n  getphone: function getphone(state) {\n    return state.Userdata.UserPhone;\n  },\n  // these should be in the contract\n  getwaiting: function getwaiting(state) {\n    return state.Userdata.Waitingforother;\n  },\n  getosign: function getosign(state) {\n    return state.Userdata.Tosign;\n  },\n  getexpiringsoon: function getexpiringsoon(state) {\n    return state.Userdata.Expiringsoon;\n  },\n  getToken: function getToken(state) {\n    return state.Userdata.UserToken;\n  }\n}; // setters for all user data\n\nvar mutations = {\n  setusername: function setusername(state, payload) {\n    // console.log(\"username:\"+payload)\n    state.Userdata.UserName = payload;\n  },\n  setuserid: function setuserid(state, payload) {\n    state.Userdata.Userid = payload;\n  },\n  setuseremail: function setuseremail(state, payload) {\n    state.Userdata.UserEmail = payload;\n  },\n  setprofilepicture: function setprofilepicture(state, payload) {\n    state.Userdata.UserProfilepicture = payload;\n    window.location.reload();\n  },\n  setinitial: function setinitial(state, payload) {\n    // console.log(payload)\n    state.Userdata.UserInitials = payload;\n  },\n  setsignature: function setsignature(state, payload) {\n    // console.log(payload)\n    state.Userdata.UserSignature = payload;\n  },\n  setcompany: function setcompany(state, payload) {\n    // console.log(payload)\n    state.Userdata.UserCompany = payload;\n  },\n  setphone: function setphone(state, payload) {\n    state.Userdata.UserPhone = payload;\n  },\n  setWaitingforother: function setWaitingforother(state, payload) {\n    state.Userdata.Waitingforother = payload;\n  },\n  setTosign: function setTosign(state, payload) {\n    state.Userdata.Tosign = payload;\n  },\n  setExpiringsoon: function setExpiringsoon(state, payload) {\n    state.Userdata.Expiringsoon = payload;\n  },\n  setToken: function setToken(state, payload) {\n    state.Userdata.UserToken = payload;\n  } // Tosign:'',  \n  // Expiringsoon:'\n\n};\nvar actions = {\n  change_username: function change_username(_ref, payload) {\n    var commit = _ref.commit;\n    // console.log(\"mutation running\")\n    commit('setusername', payload);\n  },\n  change_id: function change_id(_ref2, payload) {\n    var commit = _ref2.commit;\n    commit('setuserid', payload);\n  },\n  change_email: function change_email(_ref3, payload) {\n    var commit = _ref3.commit;\n    commit('setuseremail', payload);\n  },\n  change_userprofilepic: function change_userprofilepic(_ref4, payload) {\n    var commit = _ref4.commit;\n    console.log(\"action run \" + payload);\n    commit('setprofilepicture', payload);\n  },\n  changeinitial: function changeinitial(_ref5, payload) {\n    var commit = _ref5.commit;\n    // console.log(\"mutation running\")\n    commit('setinitial', payload);\n  },\n  changesignature: function changesignature(_ref6, payload) {\n    var commit = _ref6.commit;\n    commit('setsignature', payload);\n  },\n  changecompany: function changecompany(_ref7, payload) {\n    var commit = _ref7.commit;\n    commit('setcompany', payload);\n  },\n  // setphone\n  changephone: function changephone(_ref8, payload) {\n    var commit = _ref8.commit;\n    commit('setphone', payload);\n  },\n  // setWaitingforother\n  changeWaitingforother: function changeWaitingforother(_ref9, payload) {\n    var commit = _ref9.commit;\n    commit('setWaitingforother', payload);\n  },\n  // setTosign\n  changeTosign: function changeTosign(_ref10, payload) {\n    var commit = _ref10.commit;\n    commit('setTosign', payload);\n  },\n  // setExpiringsoon\n  changeExpiringsoon: function changeExpiringsoon(_ref11, payload) {\n    var commit = _ref11.commit;\n    commit('setExpiringsoon', payload);\n  },\n  changeToken: function changeToken(_ref12, payload) {\n    var commit = _ref12.commit;\n    commit('setToken', payload);\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/usmanfazil/Git_clones/notary-front/src/store/modules/user.js"],"names":["state","Userdata","UserName","Userid","UserEmail","UserProfilepicture","UserInitials","UserSignature","UserCompany","UserPhone","UserToken","Waitingforother","Tosign","Expiringsoon","getters","getusername","getuserid","getemail","getprofilepicture","getinitials","getsignature","getcompany","getphone","getwaiting","getosign","getexpiringsoon","getToken","mutations","setusername","payload","setuserid","setuseremail","setprofilepicture","window","location","reload","setinitial","setsignature","setcompany","setphone","setWaitingforother","setTosign","setExpiringsoon","setToken","actions","change_username","commit","change_id","change_email","change_userprofilepic","console","log","changeinitial","changesignature","changecompany","changephone","changeWaitingforother","changeTosign","changeExpiringsoon","changeToken"],"mappings":"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","sourcesContent":["const state  ={\n    Userdata:{\n        UserName:'sidra',\n        Userid:'pidra',\n        UserEmail:'okay',\n        UserProfilepicture:'akjdakjdkh',\n        UserInitials:'adadad',\n        UserSignature:'dadada',     \n        UserCompany:'dadad',\n        UserPhone:'dadada',\n        UserToken:'dadada',\n        // these should be in the contract module\n        Waitingforother:'1',\n        Tosign:'1',  \n        Expiringsoon:'1' \n    }\n\n    \n};\n\n// getters for all user data \nconst getters ={\n\n    getusername:state =>{\n        return state.Userdata.UserName;\n    },\n\n    getuserid: state =>{\n        return state.Userdata.Userid;\n    },\n\n    getemail: state=>{\n        // console.log(\"chal bhi rhaa hn mein\"+state.Userdata.UserEmail)\n\n        return state.Userdata.UserEmail\n    },\n    \n    getprofilepicture:state=>{\n        // console.log(\"chal rhaa hn mein\"+state.Userdata.UserProfilepicture)\n    //   return this.$store.getters.getprofilepicture || 0\n        return \"http://localhost:8000/\"+ state.Userdata.UserProfilepicture\n    },\n\n    getinitials:state=>{\n        return state.Userdata.UserInitials\n    },\n\n    getsignature:state=>{\n        return state.Userdata.UserSignature;\n    },\n\n    getcompany:state=>{\n        return state.Userdata.UserCompany\n    },\n\n    getphone:state=>{\n    return state.Userdata.UserPhone    \n    },\n\n    // these should be in the contract\n    getwaiting:state=>{\n        return state.Userdata.Waitingforother;\n    },\n\n    getosign:state=>{\n        return state.Userdata.Tosign\n    },\n\n    getexpiringsoon:state=>{\n        return state.Userdata.Expiringsoon\n    },\n    getToken:state=>{\n        return state.Userdata.UserToken\n    }\n};\n\n\n// setters for all user data\nconst mutations = {\n    \n    setusername: (state,payload) =>{\n        // console.log(\"username:\"+payload)\n        state.Userdata.UserName = payload;\n    },\n\n    setuserid:(state,payload)=>{\n        state.Userdata.Userid = payload;\n    },\n\n    setuseremail:(state,payload)=>{\n        state.Userdata.UserEmail= payload;\n    },\n\n    setprofilepicture: (state,payload) =>{\n        state.Userdata.UserProfilepicture = payload\n        window.location.reload()\n    },\n\n    setinitial:(state,payload)=>{\n        // console.log(payload)\n\n        state.Userdata.UserInitials = payload\n    },\n\n    setsignature:(state,payload)=>{\n        // console.log(payload)\n\n        state.Userdata.UserSignature = payload\n    },\n\n    setcompany:(state,payload)=>{\n        // console.log(payload)\n\n        state.Userdata.UserCompany= payload\n    },\n    setphone:(state,payload)=>{\n        state.Userdata.UserPhone = payload\n    },\n\n    setWaitingforother:(state,payload)=>{\n        state.Userdata.Waitingforother = payload   \n    },\n    \n    setTosign:(state,payload)=>{\n        state.Userdata.Tosign = payload\n    },\n\n    setExpiringsoon:(state,payload)=>{\n        state.Userdata.Expiringsoon = payload\n    },\n    setToken:(state,payload)=>{\n        state.Userdata.UserToken = payload\n\n    }\n\n\n\n    // Tosign:'',  \n    // Expiringsoon:'\n\n};\n\nconst actions = {\n\n    change_username: ({commit},payload) => {\n        // console.log(\"mutation running\")\n        commit('setusername',payload);\n    }, \n\n    change_id:({commit},payload)=>{\n        commit('setuserid',payload)\n    },   \n    change_email:({commit},payload)=>{\n        commit('setuseremail',payload)\n    },  \n\n    change_userprofilepic:({commit},payload)=>{\n        console.log(\"action run \"+ payload)\n        commit('setprofilepicture',payload);\n    },\n\n    changeinitial:({commit},payload)=>{\n        // console.log(\"mutation running\")\n        commit('setinitial',payload)\n    },\n\n    changesignature:({commit},payload)=>{\n        commit('setsignature',payload)\n    },\n\n    changecompany:({commit},payload)=>{\n        commit('setcompany',payload)\n    },\n\n    // setphone\n    changephone:({commit},payload)=>{\n        commit('setphone',payload)\n    },\n\n    // setWaitingforother\n    changeWaitingforother:({commit},payload)=>{\n        commit('setWaitingforother',payload)\n    },\n\n    // setTosign\n    changeTosign:({commit},payload)=>{\n        commit('setTosign',payload)\n    },\n    // setExpiringsoon\n    changeExpiringsoon:({commit},payload)=>{\n        commit('setExpiringsoon',payload)\n    },\n\n    changeToken:({commit},payload)=>{\n        commit('setToken',payload)\n    }\n};\n\nexport default{\n    state,\n    mutations,\n    actions,\n    getters\n}\n\n\n"]}]}