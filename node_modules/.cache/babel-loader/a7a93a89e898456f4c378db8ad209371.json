{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js!/Users/usmanfazil/Git_clones/notary-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/usmanfazil/Git_clones/notary-front/src/store/modules/counter.js","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/store/modules/counter.js","mtime":1549963211650},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var state = {\n  counter: 0\n};\nvar getters = {\n  doublecounter: function doublecounter(state) {\n    return state.counter * 2;\n  },\n  stringcounter: function stringcounter(state) {\n    return state.counter + \"Clicks\";\n  }\n};\nvar mutations = {\n  increment: function increment(state, payload) {\n    state.counter += payload;\n  },\n  decrement: function decrement(state, payload) {\n    state.counter -= payload;\n  }\n};\nvar actions = {\n  asyncIncrementAction: function asyncIncrementAction(_ref, payload) {\n    var commit = _ref.commit;\n    setTimeout(function () {\n      commit('increment', payload.by);\n    }, payload.duration);\n  },\n  asyncDecrementAction: function asyncDecrementAction(_ref2, payload) {\n    var commit = _ref2.commit;\n    setTimeout(function () {\n      commit('decrement', payload.by);\n    }, payload.duration);\n  },\n  increment: function increment(_ref3, payload) {\n    var commit = _ref3.commit;\n    commit('increment', payload);\n  },\n  decrement: function decrement(_ref4, payload) {\n    var commit = _ref4.commit;\n    commit('decrement', payload);\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["/Users/usmanfazil/Git_clones/notary-front/src/store/modules/counter.js"],"names":["state","counter","getters","doublecounter","stringcounter","mutations","increment","payload","decrement","actions","asyncIncrementAction","commit","setTimeout","by","duration","asyncDecrementAction"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAC;AADE,CAAd;AAIA,IAAMC,OAAO,GAAE;AACXC,EAAAA,aAAa,EAAC,uBAAAH,KAAK,EAAG;AAClB,WAAOA,KAAK,CAACC,OAAN,GAAgB,CAAvB;AACK,GAHE;AAKXG,EAAAA,aAAa,EAAE,uBAAAJ,KAAK,EAAG;AACnB,WAAOA,KAAK,CAACC,OAAN,GAAgB,QAAvB;AACH;AAPU,CAAf;AAUA,IAAMI,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,mBAACN,KAAD,EAAOO,OAAP,EAAkB;AACzBP,IAAAA,KAAK,CAACC,OAAN,IAAiBM,OAAjB;AACP,GAHiB;AAKlBC,EAAAA,SAAS,EAAE,mBAACR,KAAD,EAAOO,OAAP,EAAkB;AACrBP,IAAAA,KAAK,CAACC,OAAN,IAAiBM,OAAjB;AACP;AAPiB,CAAlB;AAWA,IAAME,OAAO,GAAG;AACZC,EAAAA,oBAAoB,EAAE,oCAAUH,OAAV,EAAoB;AAAA,QAAlBI,MAAkB,QAAlBA,MAAkB;AACtCC,IAAAA,UAAU,CAAC,YAAI;AAACD,MAAAA,MAAM,CAAC,WAAD,EAAcJ,OAAO,CAACM,EAAtB,CAAN;AAAgC,KAAtC,EACbN,OAAO,CAACO,QADK,CAAV;AAEH,GAJW;AAMZC,EAAAA,oBAAoB,EAAC,qCAAUR,OAAV,EAAoB;AAAA,QAAlBI,MAAkB,SAAlBA,MAAkB;AACrCC,IAAAA,UAAU,CACN,YAAI;AAACD,MAAAA,MAAM,CAAC,WAAD,EAAaJ,OAAO,CAACM,EAArB,CAAN;AAA+B,KAD9B,EAC+BN,OAAO,CAACO,QADvC,CAAV;AAEH,GATW;AAUZR,EAAAA,SAAS,EAAE,0BAAUC,OAAV,EAAsB;AAAA,QAApBI,MAAoB,SAApBA,MAAoB;AAC7BA,IAAAA,MAAM,CAAC,WAAD,EAAaJ,OAAb,CAAN;AACH,GAZW;AAcZC,EAAAA,SAAS,EAAC,0BAAUD,OAAV,EAAoB;AAAA,QAAlBI,MAAkB,SAAlBA,MAAkB;AAC1BA,IAAAA,MAAM,CAAC,WAAD,EAAaJ,OAAb,CAAN;AACH;AAhBW,CAAhB;AAmBA,eAAc;AACVP,EAAAA,KAAK,EAALA,KADU;AAEVK,EAAAA,SAAS,EAATA,SAFU;AAGVI,EAAAA,OAAO,EAAPA,OAHU;AAIVP,EAAAA,OAAO,EAAPA;AAJU,CAAd","sourcesContent":["const state  ={\n    counter:0\n};\n\nconst getters ={\n    doublecounter:state =>{\n        return state.counter * 2;\n            },\n\n    stringcounter: state =>{\n        return state.counter + \"Clicks\"\n    }\n};\n\nconst mutations = {\n    increment: (state,payload) =>{\n        state.counter += payload;\n},\n\ndecrement: (state,payload) =>{\n        state.counter -= payload;\n}\n\n};\n\nconst actions = {\n    asyncIncrementAction: ({commit},payload)=>{     \n        setTimeout(()=>{commit('increment', payload.by)}\n    ,payload.duration)\n    },\n\n    asyncDecrementAction:({commit},payload)=>{\n        setTimeout(\n            ()=>{commit('decrement',payload.by)},payload.duration)\n    },\n    increment: ({commit},payload) => {\n        commit('increment',payload);\n    },        \n\n    decrement:({commit},payload)=>{\n        commit('decrement',payload);\n    },\n};\n\nexport default{\n    state,\n    mutations,\n    actions,\n    getters\n}\n\n\n"]}]}