{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js!/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usmanfazil/Git_clones/notary-front/src/components/auth/signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/components/auth/signup.vue","mtime":1555254467572},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, email, numeric, minLength, sameAs, maxLength, alpha, alphaNum } from \"vuelidate/lib/validators\";\nimport verification from './verficationscreen.vue';\nexport default {\n  // data and variables\n  data: function data() {\n    return {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      company: \"\",\n      terms: false,\n      number: '',\n      exist: false,\n      globalname: true,\n      errors: [],\n      nextroute: false\n    };\n  },\n  // validations\n  validations: {\n    email: {\n      required: required,\n      email: email\n    },\n    password: {\n      required: required,\n      minLen: minLength(8)\n    },\n    company: {\n      required: required,\n      minLen: minLength(3)\n    },\n    confirmPassword: {\n      sameAs: sameAs(function (vm) {\n        return vm.password;\n      })\n    },\n    terms: {\n      required: required\n    },\n    number: {\n      required: required,\n      numeric: numeric,\n      minLen: minLength(8),\n      maxLen: maxLength(15)\n    },\n    firstname: {\n      required: required,\n      alpha: alpha\n    },\n    lastname: {\n      required: required,\n      alpha: alpha\n    }\n  },\n  // components\n  components: {\n    verification: verification\n  },\n  // methods\n  methods: {\n    loginEnter: function loginEnter() {\n      console.log(this.$v.invalid);\n      this.$router.push(\"/home\");\n    },\n    onSubmit: function onSubmit() {\n      var _this = this;\n\n      if (!this.$v.$invalid) {\n        this.$http.post('http://localhost:8000/signup', {\n          \"email\": this.email,\n          \"password\": this.password,\n          \"name\": this.name,\n          \"company\": this.company,\n          \"phone\": this.number\n        }).then(function (response) {\n          if (response.status == 200) {\n            console.log(_this);\n            _this.nextroute = true;\n\n            _this.$router.push(\"/verify\");\n\n            localStorage.setItem(\"email\", _this.email);\n            console.log(\"chal gyaa code\");\n          } else {\n            console.log(response);\n          }\n        }, function (error) {\n          console.log(error.bodyText);\n\n          if (error.body == \"EMAIL_ALREADY_EXISTS\") {\n            _this.email = true; // this.exist = true;\n\n            setTimeout(function () {\n              return _this.exist = false;\n            }, 1000);\n          }\n\n          _this.errors.push(error.body);\n\n          console.log(error.body);\n        });\n      } // console.log(\"mein chal rhaa hn naa mein so rae hn mein\")\n\n    },\n    existchange: function existchange() {\n      this.exist = false;\n    }\n  },\n  computed: {\n    flag: function flag() {\n      if (/\\s/.test(this.$v.email.$model)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    name: function name() {\n      return this.Fname + \" \" + this.Lname;\n    },\n    showresponse: function showresponse() {},\n    Fname: function Fname() {\n      return this.firstname.trim();\n    },\n    Lname: function Lname() {\n      return this.lastname.trim();\n    },\n    emailexist: function emailexist() {\n      return this.exist;\n    }\n  } // beforeRouteLeave(to,from,next){\n  //   console.log(to)\n  //   next(false)\n  // }\n\n};",{"version":3,"sources":["signup.vue"],"names":[],"mappings":"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","sourcesContent":["                    <template>\n                        <div>\n                        <div v-if=\"globalname\" class=\"row row-set\">\n                        <div class=\"col-md-4 col-lg-4 col-sm-6 col-xs-12\">\n                            <!-- {{$v.$invalid}} -->\n                        </div>\n                          <!-- this is awesome time -->\n                        <div  class=\"col-md-4 col-lg-4 col-sm-6 col-xs-12\"  >\n                              <div>\n                                  <h3>Sign Up</h3>\n\n                                  \n                              \n                                  <transition v-if=\"exist\" name=\"fade\">\n                                  <div   class=\"alert alert-info\" transition=\"expand\">{{u}}</div>\n                                  </transition>\n                              \n                                  <form @submit.prevent=\"onSubmit\">\n                                  <div class=\"row\">\n                                  <div class=\"col-6\">\n                                    <input type=\"text\" class=\"form-control\" @blur=\"$v.firstname.$touch()\"  v-model=\"firstname\" placeholder=\"First Name\" id=\"firstname\"> \n                                    <small v-if=\"!$v.firstname.alpha\" :class=\"{invalid:!$v.firstname.alpha}\">Spaces and numbers are not allowed</small>\n                                    </div>\n                                  <div class=\"col-6\">\n                                    <input type=\"text\" class=\"form-control\" @blur=\"$v.lastname.$touch()\"  v-model=\"lastname\" placeholder=\"Last Name\"> \n                                    <small v-if=\"!$v.firstname.alpha\" :class=\"{invalid:!$v.firstname.alpha}\">Spaces and numbers are not allowed</small>\n                                  </div>\n                                  \n                                  <!-- email validations -->\n                                  <div class=\"col-12\">  \n                                    <input type=\"email\" id=\"email\" \n                                    v-model=\"email\" \n                                    @blur=\"$v.email.$touch()\" @focus=\"existchange\"\n                                    class=\"form-control\" placeholder=\"Email\"> \n                                        <small v-if=\"flag\" class=\"invalid\"> Spaces are not allowed</small>\n                                        <small   :class=\"{invalid: true}\" v-if=\"!$v.email.required\">This field must not be empty.</small>\n                                        <small v-if=\"!$v.email.email\"  :class=\"{invalid:true}\">Provide a valid email like johndoe@domain.com</small>\n                                        </div>\n\n                                        <small class=\"error-msg\" v-if=\"emailexist\">email already exists</small>\n\n\n                                  <!-- company validation -->\n                                  <div class=\"col-12\">\n                                    <input type=\"text\" @blur=\"$v.company.$touch()\" v-model=\"company\" id=\"company\" class=\"form-control\" placeholder=\"Company\">\n                                    <small v-if=\"!$v.company.minLen\" :class=\"{invalid: !$v.company.minLen}\">Company name must be 3 character long</small>\n                                  </div>\n\n                                  <!-- phone no validations -->\n                                  <div class=\"col-12\">\n                                    <input type=\"text\" class=\"form-control\" @blur=\"$v.number.$touch()\" v-model=\"number\" placeholder=\"Phone no\">\n                                    <small v-if=\"!$v.number.minLen\" :class=\"{invalid:true}\">Phone number must be 8 digit long</small>\n                                  </div>\n\n                                  <!-- password validation regex required -->\n                                  <div class=\"col-12\"> \n                                    <input class=\"form-control\" v-model=\"password\" @blur=\"$v.password.$touch()\" type=\"password\" placeholder=\"Enter new password\">\n                                    <small class=\"UI-info\" v-if=\"!$v.password.minLen\" :class=\"{invalid:true}\">The password must be 8 character long</small>\n                                  </div>\n\n                                  <!-- confirm password validations -->\n                                  <div class=\"col-12\">\n                                    <input type=\"password\" v-model=\"confirmPassword\" @blur=\"$v.confirmPassword.$touch()\" class=\"form-control\" placeholder=\"Confirm password\">\n                                    <small v-if=\"!$v.confirmPassword.sameAs && $v.confirmPassword.$invalid\" :class=\"{invalid:true}\">The password does not match</small>\n                                  </div>\n\n                                  <!-- terms and condition validation -->\n                                  <div class=\"col-12 form-check\" :class=\"{termcondition:!$v.terms.$model}\" >\n                                    <input type=\"checkbox\" id=\"terms\" v-model=\"terms\" @change=\"$v.terms.$touch()\"   class=\"form-check-input\">Accept Terms and Conditions\n                                  </div>\n                                              \n                                  </div>\n                                  <button  :class=\"{disabled:$v.$invalid}\" type=\"submit\" >Create Your account</button>\n                                  <!--   -->\n                                  </form>                      \n                                  </div>\n\n                                    </div>                                    \n                                    <div class=\"col-md-4 col-lg-4 col-sm-6 col-xs-12\"> </div>\n                                </div>  \n\n                                   <!-- hdahjdajd -->\n                                  <verification v-if=\"!globalname\"></verification>\n\n                            </div>\n\n\n                    </template>\n\n    <script>\n\n    import {\n      required,\n      email,\n      numeric,\n      minLength,  \n      sameAs,\n      maxLength,\n      alpha,\n      alphaNum,\n\n    } from \"vuelidate/lib/validators\";\n\n    import verification from './verficationscreen.vue'\n\n\n    export default {\n\n      // data and variables\n      data() {\n        return {\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          company: \"\",\n          terms:false,\n          number:'',\n          exist: false,\n          globalname: true,\n          errors:[],\n          nextroute:false\n\n\n        };\n      },\n\n\n        // validations\n        validations: {\n        email: {\n          required,\n          email,  \n        },\n\n        password: {\n        required,\n        minLen: minLength(8)\n        },\n\n        company:{\n            required,\n            minLen:minLength(3)\n        },\n\n        confirmPassword: {\n        sameAs: sameAs(vm => {\n        return vm.password\n        })\n        },\n\n        terms: {\n        required\n        },\n\n        number: {\n            required,\n            numeric,\n            minLen: minLength(8),\n            maxLen: maxLength(15)\n            \n          },\n\n        firstname:{\n          required,\n          alpha\n        },\n\n        lastname:{\n          required,\n          alpha\n        }\n      },\n\n        // components\n        components:{\n            verification\n        },\n\n\n        // methods\n      methods: {\n\n        loginEnter() {\n            console.log(this.$v.invalid);\n            this.$router.push(\"/home\");\n        },\n        \n        onSubmit() {\n              \n          if(!this.$v.$invalid){\n            this.$http.post('http://localhost:8000/signup', {\"email\": this.email,\n                \"password\":this.password,\n                \"name\": this.name,\n                \"company\":this.company,\n                \"phone\":this.number\n                })\n            .then(response => {\n                \n                if(response.status ==200){\n                  console.log(this)\n                  this.nextroute = true;\n                  this.$router.push(\"/verify\")\n                  localStorage.setItem(\"email\",this.email)\n                  console.log(\"chal gyaa code\")\n                }\n                else{\n                  console.log(response)\n                }\n                \n\n                },\n               error => {\n                 console.log(error.bodyText)\n                if(error.body == \"EMAIL_ALREADY_EXISTS\"){\n                    this.email= true;\n                    // this.exist = true;\n                    setTimeout((()=>this.exist = false),1000)\n                }\n                this.errors.push(error.body)\n                console.log(error.body)\n\n            });\n          }\n           \n\n          // console.log(\"mein chal rhaa hn naa mein so rae hn mein\")\n        \n\n\n        },\n\n        existchange(){\n          this.exist = false;\n        }\n      },\n\n      computed:{\n        flag:function(){\n          if (/\\s/.test(this.$v.email.$model)) {\n            return true\n            }\n          else{\n            return false\n          }\n          \n        },\n\n        name:function(){\n          return this.Fname +\" \"+  this.Lname;\n        },\n\n        showresponse:function(){\n\n        },\n\n        Fname:function(){\n          return this.firstname.trim();\n        },\n        Lname:function(){\n          return this.lastname.trim()\n        },\n\n        emailexist:function(){\n            return this.exist\n        }\n      },\n\n      // beforeRouteLeave(to,from,next){\n      //   console.log(to)\n      //   next(false)\n      // }\n\n     \n    };\n    </script>\n\n                    <style scoped>\n    @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+SC\");\n\n    *{\n      scroll-behavior: unset;\n    }\n\n    .row {\n      text-align: center;\n      overflow: hidden;\n      margin: 0%;\n    }\n\n    .alert{\n      position: absolute;\n    }\n\n    h3 {\n      text-transform: uppercase;\n      font-family: \"Noto Sans SC\", sans-serif;\n    }\n\n    .container-fluid{\n      height: 100vh;\n      /* padding-top: 5%; */\n    }\n\n      .error-msg{\n                    color: #d03238;\n                    display: block;\n                    /* margin: 8px 0; */\n              }\n\n\n    button {\n      background-color: #ffce00;\n      border: #ffce00;\n      height: 3rem;\n      width: 15rem;\n      border-radius: 4px;\n      font-weight: bolder;\n      text-transform: uppercase;\n    }\n\n    form img, \n    form h3 {\n      text-align: center;\n    }\n\n    .termcondition{\n      color: #d03238;\n    }\n\n    .invalid {\n      text-align: left;\n      color: #d03238;\n      font-size: 12px;\n      display: block;\n    }\n\n    .disabled{\n        cursor: not-allowed;\n        background-color: #cccccc;\n    }\n\n    .inline{\n      text-align: left;\n      margin-left: 10%;\n\n    }\n\n    form div{\n      margin-top: 7px;\n      margin-bottom: 7px;\n\n    }\n\n    .invalid_checkbox{\n      color: red;\n    }\n\n    .row-set{\n     margin: 10px;\n    }\n\n\n\n    \n\n    </style>"],"sourceRoot":"src/components/auth"}]}