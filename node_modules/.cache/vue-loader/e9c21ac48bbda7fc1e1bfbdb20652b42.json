{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usmanfazil/Git_clones/notary-front/src/components/extra.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/components/extra.vue","mtime":1555255130607},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nexport default {\ndata:function(){\n  return{\n    \n  }\n},\n\nmethods:{\n  run(){\n\n     let token = this.token;\n      this.$http\n        .post(\"http://localhost:8000/searchContract\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n         console.log(res.bodyText)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n  }\n},\ncomputed:{\n  token() {\n      return this.$store.getters.getToken;\n    }\n}\n}\n",{"version":3,"sources":["extra.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"extra.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"contaier\">\n    <button @click=\"run()\">Search</button>\n    {{value}}\n  </div>\n</template>\n\n<script>\nexport default {\ndata:function(){\n  return{\n    \n  }\n},\n\nmethods:{\n  run(){\n\n     let token = this.token;\n      this.$http\n        .post(\"http://localhost:8000/searchContract\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n         console.log(res.bodyText)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n  }\n},\ncomputed:{\n  token() {\n      return this.$store.getters.getToken;\n    }\n}\n}\n</script>\n\n<style>\n\n</style>\n"]}]}