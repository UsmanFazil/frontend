{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usmanfazil/Git_clones/notary-front/src/components/auth/signup.vue?vue&type=template&id=4179f402&scoped=true&","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/components/auth/signup.vue","mtime":1555254467572},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm.globalname\n        ? _c(\"div\", { staticClass: \"row row-set\" }, [\n            _c(\"div\", { staticClass: \"col-md-4 col-lg-4 col-sm-6 col-xs-12\" }),\n            _c(\"div\", { staticClass: \"col-md-4 col-lg-4 col-sm-6 col-xs-12\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\"h3\", [_vm._v(\"Sign Up\")]),\n                  _vm.exist\n                    ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"alert alert-info\",\n                            attrs: { transition: \"expand\" }\n                          },\n                          [_vm._v(_vm._s(_vm.u))]\n                        )\n                      ])\n                    : _vm._e(),\n                  _c(\n                    \"form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.firstname,\n                                expression: \"firstname\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: \"First Name\",\n                              id: \"firstname\"\n                            },\n                            domProps: { value: _vm.firstname },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.firstname.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.firstname = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.firstname.alpha\n                            ? _c(\n                                \"small\",\n                                { class: { invalid: !_vm.$v.firstname.alpha } },\n                                [_vm._v(\"Spaces and numbers are not allowed\")]\n                              )\n                            : _vm._e()\n                        ]),\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.lastname,\n                                expression: \"lastname\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"text\", placeholder: \"Last Name\" },\n                            domProps: { value: _vm.lastname },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.lastname.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.lastname = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.firstname.alpha\n                            ? _c(\n                                \"small\",\n                                { class: { invalid: !_vm.$v.firstname.alpha } },\n                                [_vm._v(\"Spaces and numbers are not allowed\")]\n                              )\n                            : _vm._e()\n                        ]),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.email,\n                                expression: \"email\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"email\",\n                              id: \"email\",\n                              placeholder: \"Email\"\n                            },\n                            domProps: { value: _vm.email },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.email.$touch()\n                              },\n                              focus: _vm.existchange,\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.email = $event.target.value\n                              }\n                            }\n                          }),\n                          _vm.flag\n                            ? _c(\"small\", { staticClass: \"invalid\" }, [\n                                _vm._v(\" Spaces are not allowed\")\n                              ])\n                            : _vm._e(),\n                          !_vm.$v.email.required\n                            ? _c(\"small\", { class: { invalid: true } }, [\n                                _vm._v(\"This field must not be empty.\")\n                              ])\n                            : _vm._e(),\n                          !_vm.$v.email.email\n                            ? _c(\"small\", { class: { invalid: true } }, [\n                                _vm._v(\n                                  \"Provide a valid email like johndoe@domain.com\"\n                                )\n                              ])\n                            : _vm._e()\n                        ]),\n                        _vm.emailexist\n                          ? _c(\"small\", { staticClass: \"error-msg\" }, [\n                              _vm._v(\"email already exists\")\n                            ])\n                          : _vm._e(),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.company,\n                                expression: \"company\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              id: \"company\",\n                              placeholder: \"Company\"\n                            },\n                            domProps: { value: _vm.company },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.company.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.company = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.company.minLen\n                            ? _c(\n                                \"small\",\n                                { class: { invalid: !_vm.$v.company.minLen } },\n                                [\n                                  _vm._v(\n                                    \"Company name must be 3 character long\"\n                                  )\n                                ]\n                              )\n                            : _vm._e()\n                        ]),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.number,\n                                expression: \"number\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"text\", placeholder: \"Phone no\" },\n                            domProps: { value: _vm.number },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.number.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.number = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.number.minLen\n                            ? _c(\"small\", { class: { invalid: true } }, [\n                                _vm._v(\"Phone number must be 8 digit long\")\n                              ])\n                            : _vm._e()\n                        ]),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.password,\n                                expression: \"password\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"password\",\n                              placeholder: \"Enter new password\"\n                            },\n                            domProps: { value: _vm.password },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.password.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.password = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.password.minLen\n                            ? _c(\n                                \"small\",\n                                {\n                                  staticClass: \"UI-info\",\n                                  class: { invalid: true }\n                                },\n                                [\n                                  _vm._v(\n                                    \"The password must be 8 character long\"\n                                  )\n                                ]\n                              )\n                            : _vm._e()\n                        ]),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.confirmPassword,\n                                expression: \"confirmPassword\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"password\",\n                              placeholder: \"Confirm password\"\n                            },\n                            domProps: { value: _vm.confirmPassword },\n                            on: {\n                              blur: function($event) {\n                                _vm.$v.confirmPassword.$touch()\n                              },\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.confirmPassword = $event.target.value\n                              }\n                            }\n                          }),\n                          !_vm.$v.confirmPassword.sameAs &&\n                          _vm.$v.confirmPassword.$invalid\n                            ? _c(\"small\", { class: { invalid: true } }, [\n                                _vm._v(\"The password does not match\")\n                              ])\n                            : _vm._e()\n                        ]),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"col-12 form-check\",\n                            class: { termcondition: !_vm.$v.terms.$model }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.terms,\n                                  expression: \"terms\"\n                                }\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: { type: \"checkbox\", id: \"terms\" },\n                              domProps: {\n                                checked: Array.isArray(_vm.terms)\n                                  ? _vm._i(_vm.terms, null) > -1\n                                  : _vm.terms\n                              },\n                              on: {\n                                change: [\n                                  function($event) {\n                                    var $$a = _vm.terms,\n                                      $$el = $event.target,\n                                      $$c = $$el.checked ? true : false\n                                    if (Array.isArray($$a)) {\n                                      var $$v = null,\n                                        $$i = _vm._i($$a, $$v)\n                                      if ($$el.checked) {\n                                        $$i < 0 &&\n                                          (_vm.terms = $$a.concat([$$v]))\n                                      } else {\n                                        $$i > -1 &&\n                                          (_vm.terms = $$a\n                                            .slice(0, $$i)\n                                            .concat($$a.slice($$i + 1)))\n                                      }\n                                    } else {\n                                      _vm.terms = $$c\n                                    }\n                                  },\n                                  function($event) {\n                                    _vm.$v.terms.$touch()\n                                  }\n                                ]\n                              }\n                            }),\n                            _vm._v(\"Accept Terms and Conditions\\n          \")\n                          ]\n                        )\n                      ]),\n                      _c(\n                        \"button\",\n                        {\n                          class: { disabled: _vm.$v.$invalid },\n                          attrs: { type: \"submit\" }\n                        },\n                        [_vm._v(\"Create Your account\")]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ]),\n            _c(\"div\", { staticClass: \"col-md-4 col-lg-4 col-sm-6 col-xs-12\" })\n          ])\n        : _vm._e(),\n      !_vm.globalname ? _c(\"verification\") : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}