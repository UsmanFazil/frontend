{"remainingRequest":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/usmanfazil/Git_clones/notary-front/src/components/template/template.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/usmanfazil/Git_clones/notary-front/src/components/template/template.vue","mtime":1555254467582},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/usmanfazil/Git_clones/notary-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      contracts: \"\"\n    };\n  },\n  computed: {\n    usercontracts() {\n      let haha = this.$store.getters.getcontractdata;\n      //   console.log(typeof(haha))\n      //   alert(haha)\n      return haha;\n    },\n    token() {\n      return this.$store.getters.getToken;\n    }\n  },\n  methods: {\n\n    imgsource(i) {\n      return \"localhost:8000/\" + i;\n    },\n\n    sendrequest() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/sent\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          store.dispatch(\"act_contractdata\", contracts);\n          console.log(contracts.length);\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n      //drafts\n      sendtoinbox() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/inbox\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          console.log(res);\n          //   contracts = JSON.parse(res.bodyText)\n          //   alert(typeof(contracts))\n          //   store.dispatch('act_contractdata',contracts)\n          //   console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendtodraft() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/drafts\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          console.log(contracts.length);\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n    sendtoactionrequire() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/actionReq\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendexpire() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/expSoon\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendtowait() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000//waitingForOther\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    }\n  }\n};\n",{"version":3,"sources":["template.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"template.vue","sourceRoot":"src/components/template","sourcesContent":["<template>\n  <div>\n    <button class=\"btn btn-primary\" @click=\"sendrequest()\">send</button>\n\n    {{usercontracts}}\n    <button class=\"btn btn-secondary\" @click=\"sendtoinbox()\">Inbox</button>\n\n    <button class=\"btn btn-secondary\" @click=\"sendtodraft()\">Draft</button>\n    <button class=\"btn btn-secondary\" @click=\"sendtoactionrequire()\">Action Require</button>\n    <button class=\"btn btn-secondary\" @click=\"sendexpire()\">Expiring soon</button>\n    <button class=\"btn btn-secondary\" @click=\"sendtowait()\">WFO</button>\n\n    <ul>\n      <li v-for=\"(i,j) in usercontracts\" :key=\"j\">\n        <p>\n          <strong>contract id</strong>\n          {{i.ContractID}}\n        </p>\n\n        <p>\n          <strong>file path</strong>\n\n          {{imgsource(i.Filepath) }}\n        </p>\n\n        <p>\n          <strong>status</strong>\n          {{i.Status}}\n        </p>\n\n        <p>\n          <strong>Creation</strong>\n          {{i.ContractcreationTime}}\n        </p>\n\n        <p>\n          <strong>Creator</strong>\n          {{i.Creator}}\n        </p>\n\n        <p>{{i.DelStatus}}</p>\n\n        <p>{{i.UpdateTime}}</p>\n\n        <p>{{i.ContractName}}</p>\n        <p>{{i.ExpirationTime}}</p>\n        <p>{{i.Blockchain}}</p>\n\n        <p>{{i.Message}}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      contracts: \"\"\n    };\n  },\n  computed: {\n    usercontracts() {\n      let haha = this.$store.getters.getcontractdata;\n      //   console.log(typeof(haha))\n      //   alert(haha)\n      return haha;\n    },\n    token() {\n      return this.$store.getters.getToken;\n    }\n  },\n  methods: {\n\n    imgsource(i) {\n      return \"localhost:8000/\" + i;\n    },\n\n    sendrequest() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/sent\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          store.dispatch(\"act_contractdata\", contracts);\n          console.log(contracts.length);\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n      //drafts\n      sendtoinbox() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/inbox\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          console.log(res);\n          //   contracts = JSON.parse(res.bodyText)\n          //   alert(typeof(contracts))\n          //   store.dispatch('act_contractdata',contracts)\n          //   console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendtodraft() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/drafts\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          console.log(contracts.length);\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n    sendtoactionrequire() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/actionReq\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendexpire() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000/expSoon\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    },\n\n    sendtowait() {\n      let token = this.token;\n      let store = this.$store;\n      let contracts = [];\n      this.$http\n        .get(\"http://localhost:8000//waitingForOther\", {\n          headers: {\n            Token: token\n          }\n        })\n        .then(res => {\n          contracts = JSON.parse(res.bodyText);\n          // alert(typeof(contracts))\n          store.dispatch(\"act_contractdata\", contracts);\n          // console.log(contracts.length)\n\n          if (res.status == 200) {\n            return res.json();\n          }\n        })\n        .then()\n        .then(error => {});\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n"]}]}